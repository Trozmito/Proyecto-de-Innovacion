import streamlit as st

st.set_page_config(page_title="Diagn√≥stico IA", layout="centered")

# Frases comunes -> s√≠ntomas clave
frases_a_sintomas = {
    "dolor de cabeza": "dolor de cabeza",
    "me duele la cabeza": "dolor de cabeza",
    "fiebre": "fiebre",
    "me siento caliente": "fiebre",
    "dolor muscular": "dolores musculares",
    "dolores musculares": "dolores musculares",
    "me duelen los m√∫sculos": "dolores musculares",
    "no puedo dormir": "insomnio",
    "duermo mal": "insomnio",
    "me cuesta dormir": "insomnio",
    "cansancio": "fatiga",
    "estoy cansado": "fatiga",
    "me siento cansado": "fatiga",
    "tos seca": "tos seca",
    "tos": "tos seca",
    "dolor de garganta": "dolor de garganta",
    "me duele la garganta": "dolor de garganta",
    "presi√≥n en el pecho": "dolor en el pecho",
    "dificultad para respirar": "dificultad para respirar",
    "mareo": "mareo",
    "n√°useas": "n√°useas",
    "v√≥mito": "v√≥mitos",
    "no tengo ganas": "apat√≠a",
    "me siento triste": "depresi√≥n",
    "tristeza": "depresi√≥n",
    "ansioso": "ansiedad",
    "me siento ansioso": "ansiedad",
    "estresado": "estr√©s",
    "me siento estresado": "estr√©s",
}

# Enfermedades con sus s√≠ntomas
enfermedades = {
    "Gripe": ["fiebre", "tos seca", "dolor de garganta", "dolores musculares", "fatiga"],
    "COVID-19": ["fiebre", "tos seca", "dificultad para respirar", "dolores musculares", "fatiga"],
    "Migra√±a": ["dolor de cabeza", "n√°useas", "fatiga", "mareo"],
    "Insomnio": ["insomnio", "fatiga", "ansiedad"],
    "Estr√©s": ["estr√©s", "fatiga", "insomnio", "dolor de cabeza"],
    "Ansiedad": ["ansiedad", "insomnio", "mareo", "dificultad para respirar"],
    "Depresi√≥n": ["depresi√≥n", "apat√≠a", "insomnio", "fatiga"],
    "Neumon√≠a": ["fiebre", "tos seca", "dolor en el pecho", "dificultad para respirar"],
    "Resfriado com√∫n": ["fiebre", "tos seca", "dolor de garganta", "fatiga"],
}

# Recomendaciones para la m√°s probable
recomendaciones = {
    "Gripe": ["Descansa mucho", "Toma l√≠quidos", "Consulta al m√©dico si la fiebre es alta"],
    "COVID-19": ["A√≠slate", "Consulta a un m√©dico", "Hidr√°tate bien"],
    "Migra√±a": ["Evita luces fuertes", "Descansa en un lugar tranquilo", "Consulta si el dolor es frecuente"],
    "Insomnio": ["Evita pantallas antes de dormir", "Mant√©n una rutina de sue√±o", "Haz respiraciones profundas"],
    "Estr√©s": ["Realiza ejercicios de relajaci√≥n", "Habla con alguien de confianza", "Descansa"],
    "Ansiedad": ["Haz respiraci√≥n lenta", "Evita la cafe√≠na", "Busca apoyo emocional"],
    "Depresi√≥n": ["Busca apoyo emocional", "Haz actividad f√≠sica ligera", "Consulta a un profesional"],
    "Neumon√≠a": ["Consulta urgente al m√©dico", "Descansa", "Sigue el tratamiento recetado"],
    "Resfriado com√∫n": ["Descansa", "Hidr√°tate", "Alivia los s√≠ntomas con medicamentos suaves"],
}

# Detectar s√≠ntomas en la frase
def detectar_sintomas(frase):
    sintomas = []
    frase = frase.lower()
    for clave, sintoma in frases_a_sintomas.items():
        if clave in frase:
            sintomas.append(sintoma)
    return list(set(sintomas))

# Diagn√≥stico basado en coincidencias
def diagnostico(sintomas):
    resultados = {}
    for enfermedad, sintomas_enf in enfermedades.items():
        coincidencias = set(sintomas).intersection(sintomas_enf)
        if coincidencias:
            porcentaje = round((len(coincidencias) / len(sintomas_enf)) * 100, 1)
            resultados[enfermedad] = porcentaje
    return sorted(resultados.items(), key=lambda x: x[1], reverse=True)[:5]

# Interfaz
st.title("ü§ñ Diagn√≥stico IA")
st.write("Describe c√≥mo te sientes o tus s√≠ntomas. Ej: *Tengo fiebre y dolor de cabeza*")

entrada = st.text_area("‚úçÔ∏è Escribe aqu√≠:")

if st.button("üîç Analizar"):
    if not entrada.strip():
        st.warning("Por favor escribe algo.")
    else:
        sintomas_detectados = detectar_sintomas(entrada)
        if not sintomas_detectados:
            st.error("No se reconocieron s√≠ntomas. Intenta escribirlo de otra forma.")
        else:
            resultados = diagnostico(sintomas_detectados)
            if not resultados:
                st.warning("No se encontr√≥ un diagn√≥stico probable.")
            else:
                st.subheader("ü©∫ Diagn√≥sticos m√°s probables:")
                for i, (enf, porc) in enumerate(resultados):
                    st.markdown(f"**{i+1}. {enf}** ‚Äî {porc}%")
                    if i == 0 and enf in recomendaciones:
                        st.write("üí° Recomendaciones:")
                        for r in recomendaciones[enf]:
                            st.write(f"- {r}")
                st.markdown("---")
                st.write("üß† **S√≠ntomas detectados:**")
                for s in sintomas_detectados:
                    st.write(f"- {s}")

# Cr√©ditos (al pie de p√°gina)
st.markdown("---")
st.markdown("### üë• Creado por:")
st.markdown("- **Rafah Gondola**")
st.markdown("- **Adri√°n Abad√≠a**")
st.markdown("- **Guillermo S√°nchez**")
